{"version":3,"file":"static/js/946.e944a909.chunk.js","mappings":"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","sources":["js/react_modules/containers/DragAndDrop/DragAndDrop.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { getSpreadSheetUrl, tasks } from '../../../constants'; \r\n\r\nimport './DragAndDrop.css';\r\n\r\nclass DragAndDrop extends Component {\r\n\tstate = {\r\n\t\tdata: null\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst listNumber = window.location.hash.split('#')[2]\r\n\t\tconst taskName = `${listNumber}. ${tasks[listNumber]}`;\r\n\r\n\t\tthis.props.fetchData(\r\n\t\t\tgetSpreadSheetUrl(taskName || '11. Drag and Drop')\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif(prevProps && prevProps !== this.props) {\r\n\t\t\tthis.setState({data: this.props.data});\r\n\t\t}\r\n\t}\r\n\r\n\tshiftElement = id => {\r\n\t  let elem = document.querySelector(`[data-id=\"${id}\"]`);\r\n\t  return elem.parentNode.removeChild(elem);\r\n\t};\r\n\r\n\tcheckIfCorrect = e => {\r\n\t  if(e.target.firstElementChild.dataset.id === e.target.parentNode.dataset.value) {\r\n\t    e.target.classList.add('-correct');\r\n\t    e.target.parentNode.classList.add('-correct');\r\n\t    e.target.firstElementChild.draggable = false;\r\n\t  }else {\r\n\t    e.target.classList.add('-wrong');\r\n\t  }\r\n\t};\r\n\r\n\tonDragStartHandler = e => {\r\n\t  e.dataTransfer.setData('text/plain', e.target.dataset.id);\r\n\t  e.dataTransfer.effectAllowed = 'move';\r\n\t};\r\n\r\n\tonDragoverHandler = e => {\r\n\t  if(e.dataTransfer.types[0] === 'text/plain') {\r\n\t   e.preventDefault();\r\n\t    if(e.target.classList.contains('droppable')) {\r\n\t    //   e.toElement.classList.add('-active');\r\n\t    }\r\n\t  }\r\n\t};\r\n\r\n\tonDragEnterHandler = e => {\r\n\t  if(e.dataTransfer.types[0] === 'text/plain') {\r\n\t   e.preventDefault(); \r\n\t      if(e.target.classList.contains('droppable')) {\r\n\t    //   e.toElement.classList.add('-active');\r\n\t    }\r\n\t  }\r\n\t};\r\n\r\n\tonDraagLeaveHandler = e => {\r\n\t  if(e.target.classList.contains('droppable') && !e.target.children.length) {\r\n\t   e.target.classList.remove('-active', '-correct', '-wrong'); \r\n\t  }\r\n\t};\r\n\r\n\tonDropHandler = e => {\r\n\t  let condition = e.target.classList.contains('draggable-container') || e.target.classList.contains('box');\r\n\t  if(!condition) return;\r\n\t  let id = e.dataTransfer.getData('text/plain');\r\n\t  e.target.appendChild(this.shiftElement(id));\r\n\t  this.checkIfCorrect(e);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet data = null;\r\n\t\tif(this.props.loading) {\r\n\t\t\tdata = <Spinner />;\r\n\t\t}\r\n\t\tconsole.log(this.state);\r\n\t\tif(this.state.data) {\r\n\t\t\tdata = (\r\n\t\t\t\t<div className=\"DragAndDrop\">\r\n\t\t\t\t\t{/* <h1>{this.state.title}</h1> */}\r\n\t\t\t\t\t<div className=\"drag-and-drop\"\r\n\t\t\t\t\t\tonDragStart={this.onDragStartHandler}\r\n\t\t\t\t\t\tonDragEnter={this.onDragEnterHandler}\r\n\t\t\t\t\t\tonDragLeave={this.onDraagLeaveHandler}\r\n\t\t\t\t\t\tonDragOver={this.onDragoverHandler}\r\n\t\t\t\t\t\tonDrop={this.onDropHandler}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"draggable-container\">\r\n\t\t\t\t\t\t\t{this.state.data.map(el => (\r\n\t\t\t\t\t\t\t\t<span className=\"element\" data-id={el.word} draggable=\"true\" key={el.word}>{el.word}</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"droppable-container\">\r\n\t\t\t\t\t\t\t{this.state.data\r\n\t\t\t\t\t\t\t\t.filter(el => el.sentence ? el.sentence : null)\r\n\t\t\t\t\t\t\t\t.map((el, index) => (\r\n\t\t\t\t\t\t\t\t\t<span className='sentense' data-value={el.correctWord} key={el.correctWord}>\r\n\t\t\t\t\t\t\t\t\t\t{el.sentence.split('|+|')[0]}\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"box droppable\" />\r\n\t\t\t\t\t\t\t\t\t\t{el.sentence.split('|+|')[1]}\r\n\t\t\t\t\t\t\t\t\t\t{/* {`${index + 1}. ${sentense.opposite.replace('|+|', <span className=\"box droppable\" />)}`} */}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tdata: state.wordsConstructor.fetchedData,\r\n\t\tloading: state.wordsConstructor.loading,\r\n\t\terror: state.wordsConstructor.error\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t  fetchData: url => dispatch(actionCreators.asyncFetchStart(url))\r\n\t};\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);\r\n"],"names":["DragAndDrop","state","data","shiftElement","id","elem","document","querySelector","parentNode","removeChild","checkIfCorrect","e","target","firstElementChild","dataset","value","classList","add","draggable","onDragStartHandler","dataTransfer","setData","effectAllowed","onDragoverHandler","types","preventDefault","contains","onDragEnterHandler","onDraagLeaveHandler","children","length","remove","onDropHandler","getData","appendChild","listNumber","window","location","hash","split","taskName","tasks","this","props","fetchData","getSpreadSheetUrl","prevProps","prevState","setState","loading","Spinner","console","log","className","onDragStart","onDragEnter","onDragLeave","onDragOver","onDrop","map","el","word","filter","sentence","index","correctWord","Component","connect","wordsConstructor","fetchedData","error","dispatch","url","actionCreators"],"sourceRoot":""}