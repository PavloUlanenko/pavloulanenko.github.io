{"version":3,"file":"static/js/798.6b7980a2.chunk.js","mappings":"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","sources":["js/react_modules/containers/SentencesConstructor/SentencesConstructor.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport * as actionCreators from \"../../store/actions/index\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { voiceOver } from '../../utilities/utilities'\r\nimport './SentencesConstructor.css';\r\n\r\nclass SentencesConstructor extends Component {\r\n\tstate = {\r\n\t\tcurrentSet: 0,\r\n\t\tcurrentSentence: '',\r\n\t\tcurrentSentenceIndex: 0,\r\n\t\ttotalSentencesQty: 10,\r\n\t\tsentence: [],\r\n\t\tcorrectSentence: [],\r\n\t\ttaskName: '',\r\n\t\tansweredSentence: [],\r\n\t\ttotalCorrect: 0,\r\n\t\tisIncorrect: false,\r\n\t};\r\n\r\n\tansweredRef = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchData(\r\n\t\t\t`https://spreadsheets.google.com/feeds/list/1n5633PymXXc-qW_UWMMFxaJYpR-r5PoXrGMaOn7VfF0/${this.props.page}/public/values?alt=json`\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tconst isTaskCompleted = this.state.currentSentenceIndex >= this.state.totalSentencesQty;\r\n\t\tconst newSetShouldBeApplied = this.state.totalCorrect && prevState.totalCorrect !== this.state.totalCorrect;\r\n\t\tif (prevProps.data === this.props.data && !newSetShouldBeApplied || isTaskCompleted) return;\r\n\t\tconst setPath = this.props.data[this.state.currentSentenceIndex];\r\n\r\n\t\tthis.setState({\r\n\t\t\ttaskName: setPath.taskName,\r\n\t\t\tsentence: setPath.wordSets,\r\n\t\t\tcurrentSentence: setPath.translation,\r\n\t\t\tcorrectSentence: setPath.correctSentence,\r\n\t\t\tansweredSentence: [],\r\n\t\t\ttotalSentencesQty: this.props.data.length,\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.clearData('fetchedData');\r\n\t}\r\n\r\n\tisSentenceCorrect = () => {\r\n\t\tconst {\r\n\t\t\tcorrectSentence,\r\n\t\t\tansweredSentence,\r\n\t\t} = this.state;\r\n\r\n\t\treturn correctSentence.join(' ') === answeredSentence.join(' ');\r\n\t};\r\n\r\n\thighlightErrors = () => {\r\n\t\tconst {\r\n\t\t\tcorrectSentence,\r\n\t\t\tansweredSentence,\r\n\t\t} = this.state;\r\n\t\t\r\n\t\tconst answeredWords = this.answeredRef.current.children;\r\n\r\n\t\tcorrectSentence.forEach((word, ind) => {\r\n\t\t\t(word !== answeredSentence[ind]) && answeredWords[ind + 1].classList.add('-incorrect');\r\n\t\t});\r\n\r\n\t\tthis.setState({ isIncorrect: true });\r\n\t};\r\n\r\n\tselectWord = (e) => {\r\n\t\tconst word = e.target.textContent;\r\n\t\tconst checkCorrectness = () => {\r\n\t\t\tconst {\r\n\t\t\t\tcorrectSentence,\r\n\t\t\t\tansweredSentence,\r\n\t\t\t} = this.state;\r\n\t\t\tconst allWordsAreSelected = correctSentence.length === answeredSentence.length;\r\n\r\n\t\t\tif (allWordsAreSelected) {\r\n\t\t\t\tconst sentenceIsCorrect = this.isSentenceCorrect();\r\n\r\n\t\t\t\tif (sentenceIsCorrect) {\r\n\t\t\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\t\t\ttotalCorrect: prevState.totalCorrect + 1,\r\n\t\t\t\t\t\tcurrentSentenceIndex: prevState.currentSentenceIndex + 1,\r\n\t\t\t\t\t\tcurrentSet: 0,\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.highlightErrors();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tansweredSentence: prevState.answeredSentence.concat(word),\r\n\t\t\tcurrentSet: prevState.currentSet + 1,\r\n\t\t}), checkCorrectness);\r\n\t};\r\n\r\n\tremoveLastWord = () => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tansweredSentence: prevState.answeredSentence.slice(0, -1),\r\n\t\t\tcurrentSet: prevState.currentSet - 1,\r\n\t\t}));\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.props.loading) {\r\n\t      return <Spinner />;\r\n\t    } else if (this.state.totalCorrect === this.state.totalSentencesQty) {\r\n\t    \treturn <Modal>Wiktory!</Modal>\r\n\t    }\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<div className=\"task-name\">{this.state.taskName}</div>\r\n\t\t\t\t<div className=\"current-sentence\">{this.state.currentSentence}</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={this.answeredRef}\r\n\t\t\t\t\tclassName=\"answer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`voice-over-icon${this.state.isIncorrect ? '' : ' -hidden'}`}\r\n\t\t\t\t\t\tonClick={() => voiceOver(this.state.correctSentence.join(','))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.answeredSentence.map((el, ind) => (\r\n\t\t\t\t\t\t\t[<span key={el + ind}>{el}</span>, ' ']\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<i className={`delete-word${!this.state.answeredSentence.length ? ' -hidden' : ''}`} onClick={this.removeLastWord} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul className=\"sentence-tiles\">\r\n\t\t\t\t\t{this.state.sentence.length && this.state.currentSet !== this.state.sentence.length && this.state.sentence[this.state.currentSet].map((word) => (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={word}\r\n\t\t\t\t\t\t\tonClick={this.selectWord}\r\n\t\t\t\t\t\t>{word}</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button className=\"show-rule\">Show the Rule</button>\r\n\t\t\t\t<div className=\"progress-bar-holder\">\r\n\t\t\t\t\t<ol className=\"progress-bar\">\r\n\t\t\t\t\t\t{Array(this.state.totalSentencesQty).fill(1).map((sentence, index) => (\r\n\t\t\t\t\t\t\t<li className={`progress-dot${this.state.currentSentenceIndex === index ? ' -current' : ''}`} key={index} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdata: state.wordsConstructor.fetchedData,\r\n\t\tloading: state.wordsConstructor.loading,\r\n\t\terror: state.wordsConstructor.error\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t  fetchData: url => dispatch(actionCreators.asyncFetchStart(url)),\r\n\t  clearData: (category) => dispatch(actionCreators.clearData(category)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SentencesConstructor);"],"names":["SentencesConstructor","state","currentSet","currentSentence","currentSentenceIndex","totalSentencesQty","sentence","correctSentence","taskName","answeredSentence","totalCorrect","isIncorrect","answeredRef","React","isSentenceCorrect","join","highlightErrors","answeredWords","current","children","forEach","word","ind","classList","add","setState","selectWord","e","target","textContent","prevState","concat","length","removeLastWord","slice","this","props","fetchData","page","prevProps","isTaskCompleted","newSetShouldBeApplied","data","setPath","wordSets","translation","clearData","loading","Spinner","Modal","className","ref","onClick","voiceOver","map","el","Array","fill","index","Component","connect","wordsConstructor","fetchedData","error","dispatch","url","actionCreators","category"],"sourceRoot":""}