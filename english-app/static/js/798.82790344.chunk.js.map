{"version":3,"file":"static/js/798.82790344.chunk.js","mappings":"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","sources":["js/react_modules/components/Card/Card.js","js/react_modules/containers/OppositeWords/OppositeWords.js"],"sourcesContent":["import React from \"react\";\r\nimport { SELECTED_MODIFIER } from \"../../../constants\";\r\nimport \"./Card.scss\";\r\n\r\nconst Card = (props) => {\r\n  const {\r\n    click,\r\n    opposite,\r\n    value,\r\n  } = props;\r\n  const selectedCard = React.createRef();\r\n\r\n  const onClickHandler = (e) => {\r\n    selectedCard.current.classList.add(SELECTED_MODIFIER);\r\n    click(e);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      className=\"Card\"\r\n      data-opposite={opposite}\r\n      onClick={onClickHandler}\r\n      ref={selectedCard}\r\n      onAnimationEnd={e => (e.target.style.display = \"none\")}\r\n    >\r\n      {value}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component, useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport withRouter from '../../HOC/withRouter';\r\nimport { getCommonActions } from '../../store/reducers/commonReducer';\r\nimport * as actionCreators from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport { shakeArray } from \"../../utilities/utilities\";\r\nimport { getSpreadSheetUrl, getSpreadSheetUrlWithRanges, getTaskPathByPageId } from '../../../constants'; \r\nimport \"./OppositeWords.css\";\r\n\r\nconst actions = getCommonActions('oppositeWords');\r\n\r\nclass OppositeWords extends Component {\r\n  state = {\r\n    data: null,\r\n    selectedQTY: 0,\r\n    selectedCard: null,\r\n    match: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { token } = this.props.params;\r\n    const requestUrl = getSpreadSheetUrlWithRanges(getTaskPathByPageId(4), token);\r\n    const {\r\n\t\t\tfetchStart: fetchStartHandler,\r\n\t\t\tfetchSuccess: fetchSuccessHandler,\r\n\t\t\tfetchFail: fetchFailHandler,\r\n\t\t} = actions;\r\n\r\n    this.props.fetchDataConnect(\r\n      requestUrl,\r\n      {\r\n\t\t\t\tfetchStartHandler,\r\n\t\t\t\tfetchSuccessHandler,\r\n\t\t\t\tfetchFailHandler,\r\n\t\t\t},\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.fetchedData !== prevProps.fetchedData) {\r\n      let arr = [];\r\n      let data = this.props.fetchedData;\r\n      let dataUpdated = data.map(elem => ({\r\n        word: elem.match,\r\n        match: elem.word\r\n      }));\r\n      arr = [...data, ...dataUpdated];\r\n      shakeArray(arr);\r\n      this.setState({ data: arr, match: false });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.restoreInitialStateConnect();\r\n  }\r\n\r\n  checkWords = e => {\r\n    if (this.state.match) {\r\n      this.setState({ match: false });\r\n    }\r\n    let text = e.target.innerText;\r\n    if (this.state.selectedQTY < 2)\r\n      this.setState(prevState => ({\r\n        selectedQTY: prevState.selectedQTY + 1,\r\n        selectedCard: text\r\n      }));\r\n    if (this.state.selectedQTY === 1) {\r\n      if (e.target.dataset.opposite === this.state.selectedCard) {\r\n        document.querySelectorAll(\".-selected\").forEach(elem => {\r\n          elem.classList.add(\"-match\");\r\n        });\r\n        this.setState({ selectedCard: null, selectedQTY: 0, match: true });\r\n      } else {\r\n        document.querySelectorAll(\".-selected\").forEach(elem => {\r\n          elem.classList.remove(\"-selected\");\r\n        });\r\n        this.setState({ selectedCard: null, selectedQTY: 0 });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let words = null;\r\n    if (this.props.loading) {\r\n      words = <Spinner />;\r\n    } else if (this.state.data) {\r\n      words = this.state.data.map(elem => (\r\n        <Card\r\n          value={elem.word}\r\n          opposite={elem.match}\r\n          key={elem.word}\r\n          click={this.checkWords}\r\n          match={this.state.match}\r\n        />\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div className=\"OppositeWords\">\r\n        <ul>{words}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  fetchedData: state.oppositeWords.fetchedData,\r\n  loading: state.oppositeWords.loading,\r\n  error: state.oppositeWords.error\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchDataConnect: (url, options) => dispatch(actionCreators.asyncFetchStart(url, options)),\r\n  restoreInitialStateConnect: () => dispatch(actions.restoreInitialState()),\r\n});\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OppositeWords));\r\n"],"names":["props","click","opposite","value","selectedCard","React","className","onClick","e","current","classList","add","SELECTED_MODIFIER","ref","onAnimationEnd","target","style","display","actions","getCommonActions","OppositeWords","state","data","selectedQTY","match","checkWords","setState","text","innerText","prevState","dataset","document","querySelectorAll","forEach","elem","remove","token","this","params","requestUrl","getSpreadSheetUrlWithRanges","getTaskPathByPageId","fetchStartHandler","fetchStart","fetchSuccessHandler","fetchSuccess","fetchFailHandler","fetchFail","fetchDataConnect","prevProps","fetchedData","arr","dataUpdated","map","word","shakeArray","restoreInitialStateConnect","words","loading","Spinner","Component","withRouter","connect","oppositeWords","error","dispatch","url","options","actionCreators","restoreInitialState"],"sourceRoot":""}