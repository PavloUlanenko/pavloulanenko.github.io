{"version":3,"file":"static/js/946.50dae3ca.chunk.js","mappings":"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","sources":["js/react_modules/containers/DragAndDrop/DragAndDrop.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {\r\n\tgetSpreadSheetUrl,\r\n\tgetTaskPathByPageId,\r\n\tmimeTypes,\r\n} from '../../../constants'; \r\n\r\nimport './DragAndDrop.css';\r\n\r\nconst { html } = mimeTypes;\r\n\r\nconst shiftElement = id => {\r\n\tconst  elem = document.querySelector(`[data-id=\"${id}\"]`);\r\n\r\n\treturn elem.parentNode.removeChild(elem);\r\n};\r\n\r\nconst checkIfCorrect = e => {\r\n\tif (e.target.firstElementChild.dataset.id === e.target.parentNode.dataset.value) {\r\n\t  e.target.classList.add('-correct');\r\n\t  e.target.parentNode.classList.add('-correct');\r\n\t  e.target.firstElementChild.draggable = false;\r\n\t} else {\r\n\t  e.target.classList.add('-wrong');\r\n\t}\r\n};\r\n\r\nconst onDragStartHandler = e => {\r\n\te.target.classList.add('-dragged');\r\n\te.dataTransfer.setData(html, e.target.dataset.id);\r\n\te.dataTransfer.effectAllowed = 'move';\r\n};\r\n\r\nconst onDragEndHandler = e => {\r\n\te.target.classList.remove('-dragged');\r\n};\r\n\r\nconst onDragOverHandler = e => {\r\n\tif(e.dataTransfer.types[0] === html) {\r\n\t \te.preventDefault();\r\n\t\tif (\r\n\t\t\te.target.classList.contains('droppable')\r\n\t\t\t&& !(e.target.classList.contains('-correct')\r\n\t\t\t|| e.target.classList.contains('-wrong'))\r\n\t\t) {\r\n\t\t\te.target.classList.add('-active');\r\n\t  \t}\r\n\t}\r\n  };\r\n\r\n  const onDragLeaveHandler = e => {\r\n\t[...document.querySelectorAll('.droppable')].forEach((el) => {\r\n\t\tif (!el.children.length) {\r\n\t\t\tel.classList.remove('-active', '-correct', '-wrong');\r\n\t\t}\r\n\t});\r\n  };\r\n\r\n  const onDropHandler = (e) => {\r\n\tconst wasDroppedBackInWordsList = e.target.closest('.draggable-container');\r\n\tconst droppableContainer = wasDroppedBackInWordsList || e.target.closest('.box:not(.-wrong):not(.-correct)');\r\n\tif(!droppableContainer) return;\r\n\r\n\tconst id = e.dataTransfer.getData(html);\r\n\tdroppableContainer.appendChild(shiftElement(id));\r\n\tonDragLeaveHandler();\r\n\tif (!wasDroppedBackInWordsList) {\r\n\t\tcheckIfCorrect(e);\r\n\t\te.target.classList.remove('-active'); \r\n\t}\r\n  };\r\n\r\n/**\r\n * Renders Drag and Drop game component.\r\n *\r\n * @param {object} props - Props.\r\n * @param {Array.<object>} data - Data for task.\r\n * @param {string|null} error - Error.\r\n * @param {boolean} loading - Show loader or not.\r\n * @param {Function} fetchDataConnect - Action that fetches data.\r\n * @return {JSX.Element} - Drag and Drop game component or loader. \r\n */\r\nconst DragAndDrop = (props) => {\r\n\tconst {\r\n\t\tfetchDataConnect,\r\n\t\tdata,\r\n\t\tloading,\r\n\t\ttitle,\r\n\t} = props;\r\n\tconst { token } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst requestUrl = getTaskPathByPageId(token);\r\n\r\n\t\tfetchDataConnect(\r\n\t\t\tgetSpreadSheetUrl(requestUrl)\r\n\t\t);\r\n\t}, []);\r\n\r\n\r\n\tif (loading) {\r\n\t\treturn  <Spinner />;\r\n\t}\r\n\tif (data) {\r\n\t\treturn (\r\n\t\t\t<div className=\"DragAndDrop\">\r\n\t\t\t\t{title ? (\r\n\t\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<div className=\"drag-and-drop\"\r\n\t\t\t\t\tonDragStart={onDragStartHandler}\r\n\t\t\t\t\tonDragEnd={onDragEndHandler}\r\n\t\t\t\t\tonDragEnter={onDragOverHandler}\r\n\t\t\t\t\tonDragLeave={onDragLeaveHandler}\r\n\t\t\t\t\tonDragOver={onDragOverHandler}\r\n\t\t\t\t\tonDrop={onDropHandler}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"draggable-container\">\r\n\t\t\t\t\t\t{data.map(el => (\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName=\"element\"\r\n\t\t\t\t\t\t\t\tdata-id={el.word}\r\n\t\t\t\t\t\t\t\tdraggable\r\n\t\t\t\t\t\t\t\tkey={el.word}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{el.word}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ol className=\"droppable-container\">\r\n\t\t\t\t\t\t{data\r\n\t\t\t\t\t\t\t.filter(el => el.sentence ? el.sentence : null)\r\n\t\t\t\t\t\t\t.map((el) => (\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName=\"sentense\"\r\n\t\t\t\t\t\t\t\t\tdata-value={el.correctWord}\r\n\t\t\t\t\t\t\t\t\tkey={el.correctWord}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{el.sentence.split('|+|')[0]}\r\n\t\t\t\t\t\t\t\t\t<span className=\"box droppable\" />\r\n\t\t\t\t\t\t\t\t\t{el.sentence.split('|+|')[1]}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tdata: state.wordsConstructor.fetchedData,\r\n\t\tloading: state.wordsConstructor.loading,\r\n\t\terror: state.wordsConstructor.error\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t  fetchDataConnect: url => dispatch(actionCreators.asyncFetchStart(url))\r\n\t};\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);\r\n"],"names":["html","mimeTypes","onDragStartHandler","e","target","classList","add","dataTransfer","setData","dataset","id","effectAllowed","onDragEndHandler","remove","onDragOverHandler","types","preventDefault","contains","onDragLeaveHandler","document","querySelectorAll","forEach","el","children","length","onDropHandler","wasDroppedBackInWordsList","closest","droppableContainer","getData","appendChild","elem","querySelector","parentNode","removeChild","shiftElement","firstElementChild","value","draggable","checkIfCorrect","connect","state","data","wordsConstructor","fetchedData","loading","error","dispatch","fetchDataConnect","url","actionCreators","props","title","token","useParams","useEffect","requestUrl","getTaskPathByPageId","getSpreadSheetUrl","Spinner","className","onDragStart","onDragEnd","onDragEnter","onDragLeave","onDragOver","onDrop","map","word","filter","sentence","correctWord","split"],"sourceRoot":""}