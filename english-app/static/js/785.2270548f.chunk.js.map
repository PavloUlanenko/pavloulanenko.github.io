{"version":3,"file":"static/js/785.2270548f.chunk.js","mappings":"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","sources":["js/react_modules/components/UI/Modal/ModalDialog.js","js/react_modules/containers/SentencesConstructor/SentencesConstructor.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Modal.scss';\r\n\r\nexport const openModal = (ref) => {\r\n    ref.current.showModal();\r\n};\r\n\r\nexport const closeModal = (ref) => {\r\n    ref.current.close();\r\n};\r\n\r\nconst ModalDialog = React.forwardRef((props, ref) => {\r\n    const {\r\n        show,\r\n        showWithoutBackDrop,\r\n        onOpenHandler,\r\n        onCloseHandler,\r\n        children,\r\n    } = props;\r\n\r\n    useEffect(() => {\r\n        // ref.current.addEventListener('close', onCloseHandler);\r\n\r\n        // return () => ref.current.removeEventListener('close', onCloseHandler);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        openModal(ref);\r\n    }, [show]);\r\n\r\n    return (\r\n        <dialog\r\n            open={showWithoutBackDrop}\r\n            className=\"ModalDialog\"\r\n            ref={ref}\r\n        >\r\n            {children}\r\n        </dialog>\r\n    );\r\n});\r\n\r\nexport default ModalDialog;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'; \r\nimport { getCommonActions } from '../../store/reducers/commonReducer';\r\nimport * as actionCreators from \"../../store/actions/index\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport ModalDialog, { closeModal } from '../../components/UI/Modal/ModalDialog';\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { voiceOver } from '../../utilities/utilities';\r\nimport { getSpreadSheetUrlWithRanges, getTaskPathByPageId, pathSheetIdPairs, HIDDEN_MODIFIER, WRONG_MODIFIER, ACTIVE_MODIFIER } from '../../../constants';\r\nimport withRouter from '../../HOC/withRouter';\r\nimport './SentencesConstructor.scss';\r\n\r\nconst actions = getCommonActions('SENTENCES_CONSTRUCTOR');\r\n\r\nclass SentencesConstructor extends Component {\r\n\tstate = {\r\n\t\tcurrentSet: 0,\r\n\t\tcurrentSentence: '',\r\n\t\tcurrentSentenceIndex: 0,\r\n\t\ttotalSentencesQty: 10,\r\n\t\tsentence: [],\r\n\t\tcorrectSentence: [],\r\n\t\ttaskName: '',\r\n\t\tansweredSentence: [],\r\n\t\ttotalCorrect: 0,\r\n\t\tisIncorrect: false,\r\n\t\tshowModal: false,\r\n\t\tshowNext: false,\r\n\t};\r\n\r\n\tansweredRef = React.createRef();\r\n\tmodalRef = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst pageId = pathSheetIdPairs['/sentences-constructor'];\r\n\t\tconst { token = '2:8' } = this.props.params;\r\n\t\tconst requestUrl = getTaskPathByPageId(pageId);\r\n\t\tconst {\r\n\t\t\tfetchStart: fetchStartHandler,\r\n\t\t\tfetchSuccess: fetchSuccessHandler,\r\n\t\t\tfetchFail: fetchFailHandler,\r\n\t\t} = actions;\r\n\r\n\t\tthis.props.fetchDataConnect(\r\n\t\t\tgetSpreadSheetUrlWithRanges(requestUrl, token),\r\n\t\t\t{\r\n\t\t\t\tfetchStartHandler,\r\n\t\t\t\tfetchSuccessHandler,\r\n\t\t\t\tfetchFailHandler,\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tconst isTaskCompleted = this.state.currentSentenceIndex >= this.state.totalSentencesQty;\r\n\t\tconst newSetShouldBeApplied = this.state.totalCorrect && prevState.totalCorrect !== this.state.totalCorrect;\r\n\t\tif (prevProps.data === this.props.data && !newSetShouldBeApplied || isTaskCompleted) return;\r\n\t\t\r\n\t\tconst setPath = this.props.data[this.state.currentSentenceIndex];\r\n\r\n\t\tthis.setState({\r\n\t\t\ttaskName: setPath.taskName,\r\n\t\t\tsentence: setPath.wordSets.split('|').map((el) => el.split('+')),\r\n\t\t\tcurrentSentence: setPath.translation,\r\n\t\t\tcorrectSentence: setPath.correctSentence.split('+'),\r\n\t\t\tansweredSentence: [],\r\n\t\t\ttotalSentencesQty: this.props.data.length,\r\n\t\t\tshowNext: false,\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.restoreInitialStateConnect();\r\n\t}\r\n\r\n\tonShowNextClickHandler = () => {\r\n\t\tif (this.state.currentSentenceIndex + 1 >= this.state.totalSentencesQty) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tshowModal: true,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\ttotalCorrect: prevState.totalCorrect + 1,\r\n\t\t\t\tcurrentSentenceIndex: prevState.currentSentenceIndex + 1,\r\n\t\t\t\tcurrentSet: 0,\r\n\t\t\t\tisIncorrect: false,\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tisSentenceCorrect = () => {\r\n\t\tconst {\r\n\t\t\tcorrectSentence,\r\n\t\t\tansweredSentence,\r\n\t\t} = this.state;\r\n\r\n\t\treturn correctSentence.join(' ') === answeredSentence.join(' ');\r\n\t};\r\n\r\n\thighlightErrors = () => {\r\n\t\tconst {\r\n\t\t\tcorrectSentence,\r\n\t\t\tansweredSentence,\r\n\t\t} = this.state;\r\n\t\tconsole.log(this.state);\r\n\t\tconst answeredWords = this.answeredRef.current.children;\r\n\r\n\t\tcorrectSentence.forEach((word, ind) => {\r\n\t\t\t(word !== answeredSentence[ind]) && answeredWords[ind].classList.add(WRONG_MODIFIER);\r\n\t\t});\r\n\r\n\t\tthis.setState({ isIncorrect: true });\r\n\t};\r\n\r\n\tselectWord = (e) => {\r\n\t\tconst word = e.target.textContent;\r\n\t\tconst checkCorrectness = () => {\r\n\t\t\tconst {\r\n\t\t\t\tcorrectSentence,\r\n\t\t\t\tansweredSentence,\r\n\t\t\t} = this.state;\r\n\t\t\tconst allWordsAreSelected = correctSentence.length === answeredSentence.length;\r\n\r\n\t\t\tif (allWordsAreSelected) {\r\n\t\t\t\tconst sentenceIsCorrect = this.isSentenceCorrect();\r\n\r\n\t\t\t\tif (sentenceIsCorrect) {\r\n\t\t\t\t\tthis.setState({ showNext: true });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.highlightErrors();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tansweredSentence: prevState.answeredSentence.concat(word),\r\n\t\t\tcurrentSet: prevState.currentSet + 1,\r\n\t\t}), checkCorrectness);\r\n\t};\r\n\r\n\tremoveLastWord = () => {\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\tansweredSentence: prevState.answeredSentence.slice(0, -1),\r\n\t\t\tcurrentSet: prevState.currentSet - 1,\r\n\t\t}));\r\n\t};\r\n\r\n\tcloseModal = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowModal: false,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.props.loading) {\r\n\t      return <Spinner />;\r\n\t    } else if (this.state.showModal) {\r\n\t\t\treturn (\r\n\t\t\t\t<ModalDialog ref={this.modalRef} show={true}>\r\n\t\t\t\t\t<h5>Victory!</h5>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassNames=\"-secondary\"\r\n\t\t\t\t\t\tonClickHandler={() => closeModal(this.modalRef)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tOk\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ModalDialog>\r\n\t\t\t);\r\n\t    }\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"SentencesConstructor wrapper\">\r\n\t\t\t\t{this.state.taskName\r\n\t\t\t\t\t? <div className=\"task-name\">{this.state.taskName}</div>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t<div className=\"current-sentence\">{this.state.currentSentence}</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"answer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={`voice-over-icon ${this.state.isIncorrect ? ACTIVE_MODIFIER : ''}`}\r\n\t\t\t\t\t\tonClick={() => voiceOver(this.state.correctSentence.join(','))}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ol className=\"answered-sentence\" ref={this.answeredRef}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.answeredSentence.map((el, ind) => (\r\n\t\t\t\t\t\t\t\t<li key={el + ind}>{el}</li>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t\t<i className={`delete-word ${!this.state.answeredSentence.length ? HIDDEN_MODIFIER : ''}`} onClick={this.removeLastWord} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul className=\"sentence-tiles\">\r\n\t\t\t\t\t{this.state.sentence.length && this.state.currentSet !== this.state.sentence.length && this.state.sentence[this.state.currentSet].map((word) => (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={word}\r\n\t\t\t\t\t\t\tonClick={this.selectWord}\r\n\t\t\t\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{word}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button className=\"outline-btn\">Show the Rule</button>\r\n\t\t\t\t{this.state.showNext\r\n\t\t\t\t\t? (<button className=\"outline-btn\" onClick={this.onShowNextClickHandler}>Next</button>)\r\n\t\t\t\t: null}\r\n\t\t\t\t<div className=\"progress-bar-holder\">\r\n\t\t\t\t\t<ol className=\"progress-bar\">\r\n\t\t\t\t\t\t{Array(this.state.totalSentencesQty).fill(1).map((sentence, index) => (\r\n\t\t\t\t\t\t\t<li className={`progress-dot${this.state.currentSentenceIndex === index ? ' -current' : ''}`} key={index} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tdata: state.sentencesConstructor.fetchedData,\r\n\tloading: state.sentencesConstructor.loading,\r\n\terror: state.sentencesConstructor.error\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tfetchDataConnect: (url, options) => dispatch(actionCreators.asyncFetchStart(url, options)),\r\n\trestoreInitialStateConnect: () => dispatch(actions.restoreInitialState()),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SentencesConstructor));"],"names":["React","props","ref","show","showWithoutBackDrop","children","onOpenHandler","onCloseHandler","useEffect","current","showModal","openModal","open","className","actions","getCommonActions","SentencesConstructor","state","currentSet","currentSentence","currentSentenceIndex","totalSentencesQty","sentence","correctSentence","taskName","answeredSentence","totalCorrect","isIncorrect","showNext","answeredRef","modalRef","onShowNextClickHandler","setState","prevState","isSentenceCorrect","join","highlightErrors","console","log","answeredWords","forEach","word","ind","classList","add","WRONG_MODIFIER","selectWord","e","target","textContent","concat","length","removeLastWord","slice","closeModal","pageId","pathSheetIdPairs","this","params","token","requestUrl","getTaskPathByPageId","fetchStartHandler","fetchStart","fetchSuccessHandler","fetchSuccess","fetchFailHandler","fetchFail","fetchDataConnect","getSpreadSheetUrlWithRanges","prevProps","isTaskCompleted","newSetShouldBeApplied","data","setPath","wordSets","split","map","el","translation","restoreInitialStateConnect","loading","Spinner","Button","classNames","onClickHandler","close","ACTIVE_MODIFIER","onClick","voiceOver","HIDDEN_MODIFIER","tabIndex","Array","fill","index","Component","withRouter","connect","sentencesConstructor","fetchedData","error","dispatch","url","options","actionCreators","restoreInitialState"],"sourceRoot":""}