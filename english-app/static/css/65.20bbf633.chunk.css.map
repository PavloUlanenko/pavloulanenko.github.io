{"version":3,"file":"static/css/65.20bbf633.chunk.css","mappings":"AAGE,gBAGE,oBACA,iBAHA,kBACA,yBAEA,CAGF,4BACE,aACA,mBAGF,kCAKE,mBAHA,yCACA,aACA,sBAEA,kBALA,SAKA,CAGF,kCAEE,wCAEA,uBADA,iCAFA,SAGA,CAEA,4CACE,YAIJ,sBAGE,qCACA,yBAGA,YAFA,qBAJA,kBAKA,WAJA,iBAKA,CAEA,+BACE,WAIJ,kBAEE,kBADA,qBACA,CAGF,4BACE,qBAGA,gBADA,gBADA,aAEA,CAEA,kCACE,yCAGF,oCAEE,mCADA,eACA,CAGF,mCACE,kCAGF,qCACE,oCAEA,8CACE,mBAIJ,qCAIE,YAHA,SACA,YACA,UACA,CC3CJ,kJDgDE,gBACE,iBAGF,4BACE,sBAGF,kCAME,sCAJA,mBACA,uBACA,wCACA,0BAJA,UAKA,CAGF,kCACE","sources":["js/react_modules/containers/DragAndDrop/DragAndDrop.scss","styles/mixins/_respond.scss"],"sourcesContent":["@use '../../../../styles/mixins/respond' as *;\r\n\r\n.DragAndDrop {\r\n  h1 {\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    font-family: cursive;\r\n    font-size: 1.3rem;\r\n  }\r\n\r\n  .drag-and-drop {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  }\r\n\r\n  .draggable-container {\r\n    width: 20%;\r\n    background-color: var(--color-green-pale);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px 10px;\r\n  }\r\n\r\n  .droppable-container {\r\n    width: 80%;\r\n    background-color: var(--color-grey-pale);\r\n    padding: 50px var(--spacing-half);\r\n    list-style: auto inside;\r\n\r\n    > .sentense {\r\n      padding: 5px;\r\n    }\r\n  }\r\n\r\n  .element {\r\n    font-family: serif;\r\n    padding: 10px 20px;\r\n    background-color: var(--color-purple);\r\n    color: var(--color-white);\r\n    display: inline-block;\r\n    margin: 5px;\r\n    cursor: move;\r\n\r\n    &.-dragged {\r\n      opacity: .5;\r\n    }\r\n  }\r\n\r\n  .box {\r\n    vertical-align: middle;\r\n    text-align: center;\r\n  }\r\n\r\n  .box.droppable {\r\n    display: inline-block;\r\n    text-indent: 0px;\r\n    min-width: 150px;\r\n    min-height: 2rem;\r\n\r\n    &:empty {\r\n      background-color: var(--color-light-grey);\r\n    }\r\n\r\n    &.-active {\r\n      min-height: 3rem;\r\n      background-color: var(--color-gold);\r\n    }\r\n\r\n    &.-wrong {\r\n      border: 3px solid var(--color-red);\r\n    }\r\n\r\n    &.-correct {\r\n      border: 3px solid var(--color-green);\r\n\r\n      > .element {\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n\r\n    > .element {\r\n      margin: 0;\r\n      padding: 4px;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  @include respond(mobile) {\r\n    h1 {\r\n      font-size: 1.4rem;\r\n    }\r\n\r\n    .drag-and-drop {\r\n      flex-direction: column;\r\n    }\r\n\r\n    .draggable-container {\r\n      width: 100%;\r\n      flex-flow: row wrap;\r\n      justify-content: center;\r\n      position: sticky;\r\n      top: var(--toolbar-height);\r\n      box-shadow: 0 4px 25px rgba(0 0 0 / 85%);\r\n    }\r\n\r\n    .droppable-container {\r\n      width: 100%;\r\n    }\r\n  }\r\n}","@mixin respond($media_names_args) {\r\n\t/*stylelint-disable*/\r\n\t$media_names: (\r\n\t'mobile-small',\r\n\t'mobile-medium',\r\n\t'mobile-large',\r\n\t'desktop-small',\r\n\t'desktop-medium',\r\n\t'desktop-large'\r\n);\r\n\r\n\t/*\r\n\t\t.98px - is needed for Macbook which incorrectly calculate width if Zoom has been used.\r\n\t\tThis solution has been taken from Bootstrap: http://getbootstrap.com/docs/4.0/layout/overview/\r\n\t*/\r\n\t$media_values: (\r\n\t'screen and (max-width:420.98px)',\r\n\t'screen and (min-width:421px) and (max-width:740.98px)',\r\n\t'screen and (min-width:741px) and (max-width:1023.98px)',\r\n\t'screen and (min-width:1024px) and (max-width:1280.98px)',\r\n\t'screen and (min-width:1281px) and (max-width:1600.98px)', /* most common laptop and macbook screen width  */\r\n\t'screen and (min-width:1601px)'\r\n);\r\n\t/*stylelint-enable*/\r\n\t$media_result: '';\r\n\r\n\t@if ($media_names_args) {\r\n\t\t@each $arg in $media_names_args {\r\n            /* nth($list, $n) Returns the element of $list at index $n */\r\n\t\t\t@if ($arg == mobile or $arg == desktop) {\r\n\t\t\t\t$media_result: $media_result+nth($media_values, index($media_names, $arg+'-small'))+', '+nth($media_values, index($media_names, $arg+'-medium'))+', '+nth($media_values, index($media_names, $arg+'-large'));\r\n\t\t\t}\r\n\r\n\t\t\t@else {\r\n\t\t\t\t$media_result: $media_result+nth($media_values, index($media_names, $arg));\r\n\t\t\t}\r\n\r\n\t\t\t@if (length($media_names_args)>1 and length($media_names_args) > index($media_names_args,$arg)) {\r\n\t\t\t\t$media_result: $media_result+', ';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@media #{$media_result} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}"],"names":[],"sourceRoot":""}