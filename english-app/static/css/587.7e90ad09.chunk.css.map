{"version":3,"file":"static/css/587.7e90ad09.chunk.css","mappings":"AAEA,WACI,aAGI,mCACI,mBACA,kCAEA,wCACI,iBAIR,qCACI,uBACA,kCAEA,wCAGI,yCACA,mBACA,2BAHA,kCAIA,kBAGJ,0CACI,iBCad,yMDrCE,4BA8BQ,sEADA,aAGA,eADA,4BACA,CAEA,0CACI","sources":["js/react_modules/containers/FindMatch/FindMatch.scss","styles/mixins/_respond.scss"],"sourcesContent":["@use '../../../../styles//mixins//respond' as *;\r\n\r\n.FindMatch {\r\n    padding: 50px;\r\n\r\n    > .find-match-form {\r\n        > .words {\r\n            list-style: decimal;\r\n            margin-bottom: var(--spacing-full);\r\n\r\n            span {\r\n                padding-left: 7px;\r\n            }\r\n        }\r\n    \r\n        > .matches {\r\n            list-style: upper-latin;\r\n            margin-bottom: var(--spacing-full);\r\n\r\n            > li {\r\n                margin-bottom: var(--spacing-half);\r\n                margin-bottom: var(--spacing-half);\r\n                background-color: var(--color-light-grey);\r\n                border-radius: 20px;\r\n                list-style-position: inside;\r\n                padding: 10px 20px;\r\n            }\r\n\r\n            span {\r\n                padding-left: 7px;\r\n            }\r\n        }\r\n\r\n        @include respond(mobile-large desktop) {\r\n            display: flex;\r\n            column-gap: var(--spacing-full);\r\n            justify-content: space-evenly;\r\n            flex-wrap: wrap;\r\n\r\n            > .buttons-wrap {\r\n                margin: auto;\r\n            }\r\n        }\r\n    }\r\n}","@mixin respond($media_names_args) {\r\n\t/*stylelint-disable*/\r\n\t$media_names: (\r\n\t'mobile-small',\r\n\t'mobile-medium',\r\n\t'mobile-large',\r\n\t'desktop-small',\r\n\t'desktop-medium',\r\n\t'desktop-large'\r\n);\r\n\r\n\t/*\r\n\t\t.98px - is needed for Macbook which incorrectly calculate width if Zoom has been used.\r\n\t\tThis solution has been taken from Bootstrap: http://getbootstrap.com/docs/4.0/layout/overview/\r\n\t*/\r\n\t$media_values: (\r\n\t'screen and (max-width:420.98px)',\r\n\t'screen and (min-width:421px) and (max-width:740.98px)',\r\n\t'screen and (min-width:741px) and (max-width:1023.98px)',\r\n\t'screen and (min-width:1024px) and (max-width:1280.98px)',\r\n\t'screen and (min-width:1281px) and (max-width:1600.98px)', /* most common laptop and macbook screen width  */\r\n\t'screen and (min-width:1601px)'\r\n);\r\n\t/*stylelint-enable*/\r\n\t$media_result: '';\r\n\r\n\t@if ($media_names_args) {\r\n\t\t@each $arg in $media_names_args {\r\n            /* nth($list, $n) Returns the element of $list at index $n */\r\n\t\t\t@if ($arg == mobile or $arg == desktop) {\r\n\t\t\t\t$media_result: $media_result+nth($media_values, index($media_names, $arg+'-small'))+', '+nth($media_values, index($media_names, $arg+'-medium'))+', '+nth($media_values, index($media_names, $arg+'-large'));\r\n\t\t\t}\r\n\r\n\t\t\t@else {\r\n\t\t\t\t$media_result: $media_result+nth($media_values, index($media_names, $arg));\r\n\t\t\t}\r\n\r\n\t\t\t@if (length($media_names_args)>1 and length($media_names_args) > index($media_names_args,$arg)) {\r\n\t\t\t\t$media_result: $media_result+', ';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@media #{$media_result} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}"],"names":[],"sourceRoot":""}